function varargout = gui1(varargin)
% GUI1 MATLAB code for gui1.fig
%      GUI1, by itself, creates a new GUI1 or raises the existing
%      singleton*.
%
%      H = GUI1 returns the handle to a new GUI1 or the handle to
%      the existing singleton*.
%
%      GUI1('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GUI1.M with the given input arguments.
%
%      GUI1('Property','Value',...) creates a new GUI1 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before gui1_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to gui1_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help gui1

% Last Modified by GUIDE v2.5 07-Apr-2019 15:19:53

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @gui1_OpeningFcn, ...
                   'gui_OutputFcn',  @gui1_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before gui1 is made visible.
function gui1_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to gui1 (see VARARGIN)

% Choose default command line output for gui1
 handles.output = hObject;
filelist1 = dir(fullfile('C:\Users\HP\Desktop\ref_images\*.jpg'));
filelist2 = dir(fullfile('C:\Users\HP\Desktop\road_2\*.jpg'));
filelist3 = dir(fullfile('C:\Users\HP\Desktop\road_3\*.jpg'));
filelist4 = dir(fullfile('C:\Users\HP\Desktop\road_4\*.jpg'));
handles.filelist1 = filelist1;
handles.filelist2 = filelist2;
handles.filelist4 = filelist4;
handles.filelist3 = filelist3;
handles.frameindex1 = 1;
handles.frameindex2 = 1;
handles.frameindex3 = 1;
handles.frameindex4 = 1;

%   handles.timer = timer( ...
%                         'ExecutionMode', 'fixedRate',...
%                         'Period',1,...
%                          'TimerFcn', {@cpt_img_Callback,hObject});
         
%         start(anim);
% Update handles structure
guidata(hObject, handles);

% UIWAIT makes gui1 wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = gui1_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in start.
function start_Callback(hObject, eventdata, handles)
% hObject    handle to start (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

srcFiles = dir('C:\Users\HP\Desktop\be_ppt_images\*.jpg');  
for k =1: length(srcFiles)-1 
    jpgFilename1=sprintf('frame_%d.jpg', k);
    jpgFilename2=sprintf('frame_%d.jpg', k+1);
    jpgFilename3=sprintf('frame_%d.jpg', k+2);
    jpgFilename4=sprintf('frame_%d.jpg', k+3);
     %fullFilename= fullfile(ref_frames,jpgFilename);
    fullFilename1= fullfile('C:\Users\HP\Desktop\be_ppt_images', jpgFilename1);
    fullFilename2= fullfile('C:\Users\HP\Desktop\be_ppt_images', jpgFilename2);
    fullFilename3= fullfile('C:\Users\HP\Desktop\be_ppt_images', jpgFilename3);
    fullFilename4= fullfile('C:\Users\HP\Desktop\be_ppt_images', jpgFilename4);
 %R1 = imread('C:\Users\HP\Desktop\ref_images\frame_114.jpg');
 R1 = imread(fullFilename1);
 R2 = imread(fullFilename2);
 R3 = imread(fullFilename3);
 R4 = imread(fullFilename4);
    %axesName = sprintf('road%d',k);
    axes(handles.road1);
    imshow(R1);
    axes(handles.road2);
    imshow(R2);
    axes(handles.road3);
    imshow(R3);
    axes(handles.road4);
    imshow(R4);
%  im1=imread('C:\Users\HP\Desktop\ref_images\1.jpg');
% %figure;imshow(im1);
 im2=rgb2gray(R1);
 %figure;imshow(im2);
 im3= edge(im2,'Canny');
 %figure;imshow(im3);
 
 ref=imread('C:\Users\HP\Desktop\ref_images\frame_15.jpg');
 %figure;imshow(ref);
 ref1=rgb2gray(ref);
 %figure;imshow(ref1);
 ref2= edge(ref1,'Canny');
 %figure;imshow(ref2);
 
 white=0;
 white1=0;
 
 for i= 1:482
   for j= 1:640
     
     if(im3(i,j)==1)
       white=white+1;
     end
      
      if(ref2(i,j)==1)
         white1 = white1+1;
      end
       
   end
 end
     
%disp(white);
%disp(white1);
%ratio= (white-white1)/white1;
 per1= (white-white1)*100/white1;
 t1= (white-white1)*200/white1;
%disp(num);
density1 = sprintf('Density percent %f ', per1);
set(handles.text1, 'String', density1);
set(handles.time1, 'String', t1);


im2=rgb2gray(R2);
 %figure;imshow(im2);
 im3= edge(im2,'Canny');
 %figure;imshow(im3);
 
 ref=imread('C:\Users\HP\Desktop\ref_images\frame_15.jpg');
 %figure;imshow(ref);
 ref1=rgb2gray(ref);
 %figure;imshow(ref1);
 ref2= edge(ref1,'Canny');
 %figure;imshow(ref2);
 
 white=0;
 white1=0;
 
 for i= 1:482
   for j= 1:640
     
     if(im3(i,j)==1)
       white=white+1;
     end
      
      if(ref2(i,j)==1)
         white1 = white1+1;
      end
       
   end
 end
     
%disp(white);
%disp(white1);
%ratio= (white-white1)/white1;
 per2= (white-white1)*100/white1;
 t2= (white-white1)*200/white1;
%disp(num);
density2 = sprintf('Density percent %f ', per2);
set(handles.text2, 'String', density2);
set(handles.time2, 'String', t2);

im2=rgb2gray(R3);
 %figure;imshow(im2);
 im3= edge(im2,'Canny');
 %figure;imshow(im3);
 
 ref=imread('C:\Users\HP\Desktop\ref_images\frame_15.jpg');
 %figure;imshow(ref);
 ref1=rgb2gray(ref);
 %figure;imshow(ref1);
 ref2= edge(ref1,'Canny');
 %figure;imshow(ref2);
 
 white=0;
 white1=0;
 
 for i= 1:482
   for j= 1:640
     
     if(im3(i,j)==1)
       white=white+1;
     end
      
      if(ref2(i,j)==1)
         white1 = white1+1;
      end
       
   end
 end
     
%disp(white);
%disp(white1);
%ratio= (white-white1)/white1;
 per3= (white-white1)*100/white1;
 t3= (white-white1)*200/white1;
%disp(num);
density3 = sprintf('Density percent %f ', per3);
set(handles.text3, 'String', density3);
set(handles.time3, 'String', t3);

im2=rgb2gray(R4);
 %figure;imshow(im2);
 im3= edge(im2,'Canny');
 %figure;imshow(im3);
 
 ref=imread('C:\Users\HP\Desktop\ref_images\frame_15.jpg');
 %figure;imshow(ref);
 ref1=rgb2gray(ref);
 %figure;imshow(ref1);
 ref2= edge(ref1,'Canny');
 %figure;imshow(ref2);
 
 white=0;
 white1=0;
 
 for i= 1:482
   for j= 1:640
     
     if(im3(i,j)==1)
       white=white+1;
     end
      
      if(ref2(i,j)==1)
         white1 = white1+1;
      end
       
   end
 end
     
%disp(white);
%disp(white1);
%ratio= (white-white1)/white1;
 per4= (white-white1)*100/white1;
 t4= (white-white1)*200/white1;
%disp(num);
density4 = sprintf('Density percent %f ', per4);
set(handles.text4, 'String', density4);
set(handles.time4, 'String', t4);

p_arr=[per1 per2 per3 per4];

for i = 1 : 4
    for j= i+1 : 4
        if(p_arr(i)<= p_arr(j))
            a = p_arr(i);
            p_arr(i)=p_arr(j);
            p_arr(j)= a;
        end
    end
end
for m= 1:4
    if(p_arr(m)==per1)
    set(handles.p1, 'String', m );
    end
end

for m= 1:4
    if(p_arr(m)==per2)
    set(handles.p2, 'String', m );
    end
end

for m= 1:4
    if(p_arr(m)==per3)
    set(handles.p3, 'String' , m );
    end
end

for m= 1:4
    if(p_arr(m)==per4)
        set(handles.p4, 'String' , m );
    end
end
   ct1 = int16(t1);
   ct2 = int16(t2);
   ct3 = int16(t3);
   ct4 = int16(t4);
   prnt = sprintf('Stop');
    set(handles.cnt1, 'String',prnt);
    set(handles.cnt2, 'String',prnt);
    set(handles.cnt3, 'String',prnt);
    set(handles.cnt4, 'String',prnt);
%    for q= 1:4
%        if(p_arr(m)==per1)
%            for x = ct1 : 1
%                set(handles.cnt1, 'String', x);
%                ct1 = ct1-1;
%                pause(1);
%            end
%        elseif(p_arr(m)==per2)
%            for x = ct2 : 1
%                set(handles.cnt2, 'String', x);
%                ct2= ct2-1;
%                pause(1);
%            end
%        elseif(p_arr(m)==per3)
%            for x = ct3 : 1
%                set(handles.cnt3, 'String', x);
%                ct3 = ct3-1;
%                pause(1);
%            end
%        else
%            for x = ct4 : 1
%                set(handles.cnt4, 'String', x);
%                ct4 = ct4-1;
%                pause(1);
%            end
%        end
%    end
% pause(5);
% end   
for q=1:4
    
    if(p_arr(q)==per1)
        for x = 1:ct1+1
            if(ct1==0)
                prnt = sprintf('Stop');
                set(handles.cnt1, 'String',prnt);
                
            else set(handles.cnt1, 'String', ct1);
                ct1 = ct1-1;
                pause(1);
            end
        end
    elseif(p_arr(q)==per2)
        for x = 1:ct2+1
            if(ct2==0)
                prnt = sprintf('Stop');
                set(handles.cnt2, 'String',prnt);
                
                
            else set(handles.cnt2, 'String', ct2);
                ct2 = ct2-1;
                pause(1);
            end
        end
    elseif(p_arr(q)==per3)
        for x = 1:ct3+1
            if(ct3==0)
                prnt = sprintf('Stop');
                set(handles.cnt3, 'String',prnt);
                
            else set(handles.cnt3, 'String', ct3);
                ct3 = ct3-1;
                pause(1);
            end
        end
        
    elseif(p_arr(q)==per4)
        for x = 1 :ct4+1
            if(ct4==0)
                prnt = sprintf('Stop');
                set(handles.cnt4, 'String',prnt);
                
            else set(handles.cnt4, 'String', ct4);
                ct4 = ct4-1;
                pause(1);
            end
        end
    end
end
%pause(10);
end
% % 
%  if strcmp(get(handles.timer, 'Running'),'off')
%      start(handles.timer);
%  end
 
%     srcFiles = dir('C:\Users\HP\Desktop\ref_images\*.jpg');
%     for i = 1:length(srcFiles)
%       filename = srcFiles(i).name;
%       Image= imread(filename);
%       axesName = sprintf('road%d',i);
%       axes(handles.road1);
%       imshow(Image);
%       pause(2);
%     end
% filelist1 = dir(fullfile('C:\Users\HP\Desktop\ref_images\*.jpg'));
%  handles.filelist1 = filelist1;
%  handles.frameindex1 = 1;
%  
%  axes(handles.road1);
% filelist1 =handles.filelist1;
% frameindex1 = handles.frameindex1;
% myfolder1 = 'C:\Users\HP\Desktop\ref_images\';
% currentframefile1 = filelist1(frameindex1).name;
% handles.frameindex1 = frameindex1 + 1;
% ff1=fullfile(myfolder1, currentframefile1);
% Im1 = imread(ff1);
% imshow(Im1);
% guidata(hObject, handles);
% 
% axes(handles.road2);
% filelist2 =handles.filelist2;
% frameindex2 = handles.frameindex2;
% myfolder2 = 'C:\Users\HP\Desktop\road_2\';
% currentframefile2 = filelist2(frameindex2).name;
% handles.frameindex2 = frameindex2 + 1;
% ff2=fullfile(myfolder2, currentframefile2);
% Im2 = imread(ff2);
% imshow(Im2);
% guidata(hObject, handles);
% 
% axes(handles.road3);
% filelist3 =handles.filelist3;
% frameindex3 = handles.frameindex3;
% myfolder3 = 'C:\Users\HP\Desktop\road_3\';
% currentframefile3 = filelist3(frameindex3).name;
% handles.frameindex3 = frameindex3 + 1;
% ff3=fullfile(myfolder3, currentframefile3);
% Im3 = imread(ff3);
% imshow(Im3);
% guidata(hObject, handles);
% 
% axes(handles.road4);
% filelist4 =handles.filelist4;
% frameindex4 = handles.frameindex4;
% myfolder4 = 'C:\Users\HP\Desktop\road_4\';
% currentframefile4 = filelist4(frameindex4).name;
% handles.frameindex4 = frameindex4 + 1;
% ff4=fullfile(myfolder4, currentframefile4);
% Im4 = imread(ff4);
% imshow(Im4);
% guidata(hObject, handles);
% 
% R2 = imread('C:\Users\HP\Desktop\ref_images\frame_114.jpg');
% axes(handles.road2);
% imshow(R2);
% 
% R3 = imread('C:\Users\HP\Desktop\ref_images\frame_114.jpg');
% axes(handles.road3);
% imshow(R3);
% 
% R4 = imread('C:\Users\HP\Desktop\ref_images\frame_114.jpg');
% axes(handles.road4);
% imshow(R4);

%  im1=imread('C:\Users\HP\Desktop\ref_images\1.jpg');
% % %figure;imshow(im1);
%  im2=rgb2gray(im1);
%  %figure;imshow(im2);
%  im3= edge(im2,'Canny');
%  %figure;imshow(im3);
%  
%  ref=imread('C:\Users\HP\Desktop\ref_images\frame_15.jpg');
%  %figure;imshow(ref);
%  ref1=rgb2gray(ref);
%  %figure;imshow(ref1);
%  ref2= edge(ref1,'Canny');
%  %figure;imshow(ref2);
%  
%  white=0;
%  white1=0;
%  
%  for i= 1:482
%    for j= 1:640
%      
%      if(im3(i,j)==1)
%        white=white+1;
%      end
%       
%       if(ref2(i,j)==1)
%          white1 = white1+1;
%       end
%        
%    end
%  end
%      
% %disp(white);
% %disp(white1);
% ratio= (white-white1)/white1;
%  per= (white-white1)*100/white1;
%  time= (white-white1)*200/white1;
% %disp(num);
% density = sprintf('Density percent= %f ', per);
% set(handles.text1, 'String', density);
 
function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in cpt_img.


% --- Executes on button press in togglebutton2.
function togglebutton2_Callback(hObject, eventdata, handles)
% hObject    handle to togglebutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of togglebutton2
